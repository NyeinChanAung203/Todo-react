{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import _slicedToArray from\"/root/Desktop/react/moz-todo-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';export default function Todo(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setEditing=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var usePrevious=function usePrevious(value){var ref=useRef();// console.log(ref)\nuseEffect(function(){// console.log('2nd useeffect')\n// console.log(value)\nref.current=value;});return ref.current;};var wasEditing=usePrevious(isEditing);var editFieldRef=useRef(null);var editButtonRef=useRef(null);useEffect(function(){if(!wasEditing&&isEditing){editFieldRef.current.focus();}if(wasEditing&&!isEditing){editButtonRef.current.focus();}},[wasEditing,isEditing]);var handleChange=function handleChange(e){return setNewName(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();props.editTask(props.id,newName);setNewName('');setEditing(false);};var editingTemplate=/*#__PURE__*/_jsxs(\"form\",{className:\"stack-small\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"todo-label\",htmlFor:props.id,children:[\"New name for \",props.name]}),/*#__PURE__*/_jsx(\"input\",{id:props.id,className:\"todo-text\",type:\"text\",onChange:handleChange,ref:editFieldRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn todo-cancel\",onClick:function onClick(){return setEditing(false);},children:[\"Cancel\",/*#__PURE__*/_jsxs(\"span\",{className:\"visually-hidden\",children:[\"renaming \",props.name]})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn btn__primary todo-edit\",children:[\"Save\",/*#__PURE__*/_jsxs(\"span\",{className:\"visually-hidden\",children:[\"new name for \",props.name]})]})]})]});var viewTemplate=/*#__PURE__*/_jsxs(\"div\",{className:\"stack-small\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"c-cb\",children:[/*#__PURE__*/_jsx(\"input\",{id:props.id,type:\"checkbox\",defaultChecked:props.complete,onChange:function onChange(){return props.toggleTaskCompleted(props.id);}}),/*#__PURE__*/_jsx(\"label\",{className:\"todo-label\",htmlFor:props.id,children:props.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn\",onClick:function onClick(){return setEditing(true);},ref:editButtonRef,children:[\"Edit \",/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:props.name})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn__danger\",onClick:function onClick(){return props.deleteTask(props.id);},children:[\"Delete \",/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:props.name})]})]})]});return/*#__PURE__*/_jsx(\"li\",{className:\"todo\",children:isEditing?editingTemplate:viewTemplate});}","map":{"version":3,"sources":["/root/Desktop/react/moz-todo-react/src/components/Todo.js"],"names":["React","useState","useRef","useEffect","Todo","props","isEditing","setEditing","newName","setNewName","usePrevious","value","ref","current","wasEditing","editFieldRef","editButtonRef","focus","handleChange","e","target","handleSubmit","preventDefault","editTask","id","editingTemplate","name","viewTemplate","complete","toggleTaskCompleted","deleteTask"],"mappings":"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","sourcesContent":["import React,{useState,useRef,useEffect} from 'react';\n\nexport default function Todo(props){\n    const [isEditing,setEditing] = useState(false)\n    const [newName,setNewName] = useState('')\n\n    const usePrevious = (value) =>{\n      const ref = useRef();\n      // console.log(ref)\n      useEffect( ()=>{\n        // console.log('2nd useeffect')\n        // console.log(value)\n        ref.current = value\n      });\n      return ref.current\n    }\n    const wasEditing = usePrevious(isEditing)\n\n    const editFieldRef = useRef(null)\n    const editButtonRef = useRef(null)\n\n    useEffect( ()=>{\n      if(!wasEditing && isEditing){\n        editFieldRef.current.focus();\n      }\n      if(wasEditing && !isEditing){\n        editButtonRef.current.focus();\n      }\n    },[wasEditing, isEditing])\n\n    \n    \n\n    const handleChange = (e) =>(\n        setNewName(e.target.value)\n    )\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        props.editTask(props.id,newName);\n        setNewName('');\n        setEditing(false);\n    }\n    const editingTemplate = (\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label className=\"todo-label\" htmlFor={props.id}>\n              New name for {props.name}\n            </label>\n            <input \n            id={props.id} \n            className=\"todo-text\" \n            type=\"text\" \n            onChange={handleChange}\n            ref={editFieldRef}\n            />\n          </div>\n          <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn todo-cancel\" onClick={()=>setEditing(false)}>\n              Cancel\n              <span className=\"visually-hidden\">renaming {props.name}</span>\n            </button>\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n              Save\n              <span className=\"visually-hidden\">new name for {props.name}</span>\n            </button>\n          </div>\n        </form>\n      );\n\n    const viewTemplate = (\n    <div className=\"stack-small\">\n        <div className=\"c-cb\">\n            <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.complete}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n            />\n            <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n            </label>\n        </div>\n        <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn\" onClick={()=>setEditing(true)} ref={editButtonRef}>\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n            <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n            >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n        </div>\n    </div>\n    );\n\n      \n    return(\n        <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\n    )\n}"]},"metadata":{},"sourceType":"module"}