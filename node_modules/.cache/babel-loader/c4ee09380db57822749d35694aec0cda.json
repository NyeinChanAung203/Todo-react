{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/root/Desktop/react/moz-todo-react/src/components/Todo.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nexport default function Todo(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n  const editFieldRef = useRef();\n  const editButtonRef = useRef();\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  const usePrevious = value => {\n    _s();\n\n    const ref = useRef();\n    console.log(ref);\n    useEffect(() => {\n      console.log('2nd useeffect');\n      console.log(value);\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  _s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  const wasEditing = usePrevious(isEditing);\n\n  const handleChange = e => setNewName(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName('');\n    setEditing(false);\n  };\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: [\"New name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todo-text\",\n        type: \"text\",\n        onChange: handleChange,\n        ref: editFieldRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        onClick: () => setEditing(false),\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"new name for \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.complete,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => setEditing(true),\n        ref: editButtonRef,\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => props.deleteTask(props.id),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Todo, \"5V++Ssa3TEZLTj1DUQEkBnh0Gp0=\", true);\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/root/Desktop/react/moz-todo-react/src/components/Todo.js"],"names":["React","useState","useRef","useEffect","Todo","props","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","wasEditing","current","focus","usePrevious","value","ref","console","log","handleChange","e","target","handleSubmit","preventDefault","editTask","id","editingTemplate","name","viewTemplate","complete","toggleTaskCompleted","deleteTask"],"mappings":"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","sourcesContent":["import React,{useState,useRef,useEffect} from 'react';\n\nexport default function Todo(props){\n    const [isEditing,setEditing] = useState(false)\n    const [newName,setNewName] = useState('')\n\n    const editFieldRef = useRef()\n    const editButtonRef = useRef()\n\n    useEffect( ()=>{\n      if(!wasEditing && isEditing){\n        editFieldRef.current.focus();\n      }\n      if(wasEditing && !isEditing){\n        editButtonRef.current.focus();\n      }\n    },[wasEditing, isEditing])\n\n    const usePrevious = (value) =>{\n      const ref = useRef();\n      console.log(ref)\n      useEffect( ()=>{\n        console.log('2nd useeffect')\n        console.log(value)\n        ref.current = value\n      });\n      return ref.current\n    }\n    const wasEditing = usePrevious(isEditing)\n\n    const handleChange = (e) =>(\n        setNewName(e.target.value)\n    )\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        props.editTask(props.id,newName);\n        setNewName('');\n        setEditing(false);\n    }\n    const editingTemplate = (\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label className=\"todo-label\" htmlFor={props.id}>\n              New name for {props.name}\n            </label>\n            <input \n            id={props.id} \n            className=\"todo-text\" \n            type=\"text\" \n            onChange={handleChange}\n            ref={editFieldRef}\n            />\n          </div>\n          <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn todo-cancel\" onClick={()=>setEditing(false)}>\n              Cancel\n              <span className=\"visually-hidden\">renaming {props.name}</span>\n            </button>\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n              Save\n              <span className=\"visually-hidden\">new name for {props.name}</span>\n            </button>\n          </div>\n        </form>\n      );\n\n    const viewTemplate = (\n    <div className=\"stack-small\">\n        <div className=\"c-cb\">\n            <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.complete}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n            />\n            <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n            </label>\n        </div>\n        <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn\" onClick={()=>setEditing(true)} ref={editButtonRef}>\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n            <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n            >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n        </div>\n    </div>\n    );\n\n      \n    return(\n        <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\n    )\n}"]},"metadata":{},"sourceType":"module"}