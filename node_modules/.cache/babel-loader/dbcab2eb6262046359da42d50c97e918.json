{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/root/Desktop/react/moz-todo-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nfunction App(props) {\n  _s();\n\n  // console.log(props.tasks)\n  const [tasks, setTasks] = useState(props.tasks);\n\n  const toggleTaskCompleted = id => {\n    const updateTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          complete: !task.complete\n        };\n      }\n\n      return task;\n    });\n    setTasks(updateTasks);\n  };\n\n  const deleteTask = id => {\n    console.log(id);\n  };\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    name: task.name,\n    complete: task.complete,\n    id: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n\n  const addTask = name => {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      complete: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoMatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: [/*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: [headingText, \" tasks remaining\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KC6VqVZ6Jv4rMYXl5t7XgNMwQ/E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/root/Desktop/react/moz-todo-react/src/App.js"],"names":["Todo","Form","FilterButton","useState","nanoid","App","props","tasks","setTasks","toggleTaskCompleted","id","updateTasks","map","task","complete","deleteTask","console","log","taskList","name","addTask","newTask","tasksNoun","length","headingText"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAACG,KAAK,CAACC,KAAP,CAAjC;;AAEA,QAAME,mBAAmB,GAAIC,EAAD,IAAM;AAChC,UAAMC,WAAW,GAAGJ,KAAK,CAACK,GAAN,CAAWC,IAAI,IAAG;AACpC,UAAGH,EAAE,KAAKG,IAAI,CAACH,EAAf,EAAkB;AAChB,eAAO,EAAC,GAAGG,IAAJ;AAASC,UAAAA,QAAQ,EAAC,CAACD,IAAI,CAACC;AAAxB,SAAP;AACD;;AACD,aAAOD,IAAP;AACD,KALmB,CAApB;AAMAL,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,GARD;;AAUA,QAAMI,UAAU,GAAIL,EAAD,IAAO;AACxBM,IAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACD,GAFD;;AAIA,QAAMQ,QAAQ,GAAGX,KAAK,CAACK,GAAN,CAAUC,IAAI,iBAC7B,QAAC,IAAD;AACE,IAAA,IAAI,EAAEA,IAAI,CAACM,IADb;AAEE,IAAA,QAAQ,EAAEN,IAAI,CAACC,QAFjB;AAGE,IAAA,EAAE,EAAED,IAAI,CAACH,EAHX;AAKE,IAAA,mBAAmB,EAAED,mBALvB;AAME,IAAA,UAAU,EAAEM;AANd,KAIOF,IAAI,CAACH,EAJZ;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;;AAWA,QAAMU,OAAO,GAAID,IAAD,IAAS;AACvB,UAAME,OAAO,GAAG;AAACX,MAAAA,EAAE,EAAC,UAAQN,MAAM,EAAlB;AAAqBe,MAAAA,IAAI,EAACA,IAA1B;AAA+BL,MAAAA,QAAQ,EAAC;AAAxC,KAAhB;AACAN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUc,OAAV,CAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,SAAS,GAAGJ,QAAQ,CAACK,MAAT,KAAoB,CAApB,GAAwB,OAAxB,GAAkC,MAApD;AACA,QAAMC,WAAW,GAAI,GAAEN,QAAQ,CAACK,MAAO,IAAGD,SAAU,YAApD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEF;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAI,MAAA,EAAE,EAAC,cAAP;AAAA,iBACGI,WADH;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAWE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,uCAFZ;AAGE,yBAAgB,cAHlB;AAAA,gBAKGN;AALH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1DQb,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Todo from './components/Todo'\nimport Form from './components/Form'\nimport FilterButton from './components/FilterButton';\nimport { useState } from 'react';\nimport {nanoid} from 'nanoid'\n\nfunction App(props) {\n  // console.log(props.tasks)\n  const [tasks,setTasks] = useState(props.tasks)\n\n  const toggleTaskCompleted = (id)=>{\n    const updateTasks = tasks.map( task =>{\n      if(id === task.id){\n        return {...task,complete:!task.complete}\n      }\n      return task;\n    });\n    setTasks(updateTasks)\n  }\n\n  const deleteTask = (id) =>{\n    console.log(id)\n  }\n\n  const taskList = tasks.map(task=> (\n    <Todo \n      name={task.name} \n      complete={task.complete} \n      id={task.id} \n      key={task.id} \n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n    />\n  ))\n\n  const addTask = (name) =>{\n    const newTask = {id:\"todo-\"+nanoid(),name:name,complete:false};\n    setTasks([...tasks,newTask])\n  }\n  \n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton/>\n        <FilterButton/>\n        <FilterButton/>\n      </div>\n      <h2 id=\"list-heading\">\n        {headingText} tasks remaining\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}