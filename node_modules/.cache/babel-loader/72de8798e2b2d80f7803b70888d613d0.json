{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/root/Desktop/react/moz-todo-react/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport default function Todo(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: [\"New name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todo-text\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"new name for \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => props.deleteTask(props.id),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"5BQSDj31132ScZeKEUetNN4TNRs=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/root/Desktop/react/moz-todo-react/src/components/Todo.js"],"names":["React","useState","Todo","props","isEditing","setEditing","editingTemplate","id","name","viewTemplate","completed","toggleTaskCompleted","deleteTask"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAWC,UAAX,IAAyBJ,QAAQ,CAAC,KAAD,CAAvC;;AAEA,QAAMK,eAAe,gBACjB;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAEH,KAAK,CAACI,EAA7C;AAAA,oCACgBJ,KAAK,CAACK,IADtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAO,QAAA,EAAE,EAAEL,KAAK,CAACI,EAAjB;AAAqB,QAAA,SAAS,EAAC,WAA/B;AAA2C,QAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA,0CAEE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,kCAA4CJ,KAAK,CAACK,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,4BAAhC;AAAA,wCAEE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,sCAAgDL,KAAK,CAACK,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAqBA,QAAMC,YAAY,gBAClB;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AACA,QAAA,EAAE,EAAEN,KAAK,CAACI,EADV;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,cAAc,EAAEJ,KAAK,CAACO,SAHtB;AAIA,QAAA,QAAQ,EAAE,MAAMP,KAAK,CAACQ,mBAAN,CAA0BR,KAAK,CAACI,EAAhC;AAJhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAEJ,KAAK,CAACI,EAA7C;AAAA,kBACCJ,KAAK,CAACK;AADP;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,KAAhC;AAAA,yCACK;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCL,KAAK,CAACK;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAC,iBAFV;AAGA,QAAA,OAAO,EAAE,MAAML,KAAK,CAACS,UAAN,CAAiBT,KAAK,CAACI,EAAvB,CAHf;AAAA,2CAKO;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCJ,KAAK,CAACK;AAAzC;AAAA;AAAA;AAAA;AAAA,gBALP;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;;AA6BA,sBACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,cAAsBJ,SAAS,GAAGE,eAAH,GAAqBG;AAApD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAxDuBP,I;;KAAAA,I","sourcesContent":["import React,{useState} from 'react';\n\nexport default function Todo(props){\n    const [isEditing,setEditing] = useState(false)\n\n    const editingTemplate = (\n        <form className=\"stack-small\">\n          <div className=\"form-group\">\n            <label className=\"todo-label\" htmlFor={props.id}>\n              New name for {props.name}\n            </label>\n            <input id={props.id} className=\"todo-text\" type=\"text\" />\n          </div>\n          <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn todo-cancel\">\n              Cancel\n              <span className=\"visually-hidden\">renaming {props.name}</span>\n            </button>\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n              Save\n              <span className=\"visually-hidden\">new name for {props.name}</span>\n            </button>\n          </div>\n        </form>\n      );\n\n    const viewTemplate = (\n    <div className=\"stack-small\">\n        <div className=\"c-cb\">\n            <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n            />\n            <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n            </label>\n        </div>\n        <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn\">\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n            <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n            >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n        </div>\n    </div>\n    );\n\n\n    return(\n        <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\n    )\n}"]},"metadata":{},"sourceType":"module"}