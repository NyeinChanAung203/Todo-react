{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","wasEditing","value","ref","useRef","useEffect","current","usePrevious","editFieldRef","editButtonRef","focus","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","complete","toggleTaskCompleted","deleteTask","Form","setName","addTask","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","App","tasks","setTasks","filter","listHeadingRef","prevTaskLength","length","FILTER_MAP","All","Active","task","Completed","filterList","Object","keys","map","updateTasks","editTaskList","remainingTask","taskList","tasksNoun","headingText","newTask","nanoid","tabIndex","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.595bf44a.chunk.js","sourcesContent":["import React,{useState,useRef,useEffect} from 'react';\n\nexport default function Todo(props){\n    const [isEditing,setEditing] = useState(false)\n    const [newName,setNewName] = useState('')\n\n    const usePrevious = (value) =>{\n      const ref = useRef();\n      // console.log(ref)\n      useEffect( ()=>{\n        // console.log('2nd useeffect')\n        // console.log(value)\n        ref.current = value\n      });\n      return ref.current\n    }\n    const wasEditing = usePrevious(isEditing)\n\n    const editFieldRef = useRef(null)\n    const editButtonRef = useRef(null)\n\n    useEffect( ()=>{\n      if(!wasEditing && isEditing){\n        editFieldRef.current.focus();\n      }\n      if(wasEditing && !isEditing){\n        editButtonRef.current.focus();\n      }\n    },[wasEditing, isEditing])\n\n    \n    \n\n    const handleChange = (e) =>(\n        setNewName(e.target.value)\n    )\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        props.editTask(props.id,newName);\n        setNewName('');\n        setEditing(false);\n    }\n    const editingTemplate = (\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label className=\"todo-label\" htmlFor={props.id}>\n              New name for {props.name}\n            </label>\n            <input \n            id={props.id} \n            className=\"todo-text\" \n            type=\"text\" \n            onChange={handleChange}\n            ref={editFieldRef}\n            />\n          </div>\n          <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn todo-cancel\" onClick={()=>setEditing(false)}>\n              Cancel\n              <span className=\"visually-hidden\">renaming {props.name}</span>\n            </button>\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n              Save\n              <span className=\"visually-hidden\">new name for {props.name}</span>\n            </button>\n          </div>\n        </form>\n      );\n\n    const viewTemplate = (\n    <div className=\"stack-small\">\n        <div className=\"c-cb\">\n            <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.complete}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n            />\n            <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n            </label>\n        </div>\n        <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn\" onClick={()=>setEditing(true)} ref={editButtonRef}>\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n            <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n            >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n        </div>\n    </div>\n    );\n\n      \n    return(\n        <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\n    )\n}","import React, { useState } from 'react';\n\nfunction Form(props){\n    const [name,setName] = useState('')\n    const handleChange = (e) =>(\n        setName(e.target.value)\n    )\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        props.addTask(name);\n        setName('');\n    }\n\n    \n\n    return(\n        <form onSubmit={handleSubmit}>\n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n            What needs to be done?\n          </label>\n        </h2>\n        <input\n          type=\"text\"\n          id=\"new-todo-input\"\n          className=\"input input__lg\"\n          name=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n          Add\n        </button>\n      </form>\n    )\n}\n\nexport default Form;","import React from 'react';\n\nfunction FilterButton(props){\n    \n    return(\n        <button \n            type=\"button\" \n            className=\"btn toggle-btn\" \n            aria-pressed={props.isPressed} \n            onClick={()=>props.setFilter(props.name)}\n        >\n          <span className=\"visually-hidden\">Show </span>\n          <span>{props.name}</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n    )\n}\n\nexport default FilterButton;","import './App.css';\nimport Todo from './components/Todo'\nimport Form from './components/Form'\nimport FilterButton from './components/FilterButton';\nimport { useState,useEffect,useRef } from 'react';\nimport {nanoid} from 'nanoid'\n\nfunction App(props) {\n  // console.log(props.tasks)\n  const [tasks,setTasks] = useState(props.tasks)\n  const [filter, setFilter] = useState('All')\n  const   listHeadingRef = useRef(null)\n\n  const usePrevious=(value)=>{\n    const ref = useRef()\n    useEffect( ()=>{\n      ref.current = value;\n    });\n    return ref.current\n  }\n  const prevTaskLength = usePrevious(tasks.length);\n\n  const FILTER_MAP = {\n    All: () => true,\n    Active: task => !task.complete,\n    Completed: task => task.complete\n  }\n  const FILTER_NAMES = Object.keys(FILTER_MAP)\n  // console.log(FILTER_NAMES)\n  const filterList = FILTER_NAMES.map(name=>(\n    <FilterButton key={name} name={name} isPressed={name === filter} setFilter={setFilter}/>\n  ))\n\n\n  const toggleTaskCompleted = (id)=>{\n    const updateTasks = tasks.map( task =>{\n      if(id === task.id){\n        return {...task,complete:!task.complete}\n      }\n      return task;\n    });\n    setTasks(updateTasks)\n  }\n\n  const editTask = (id,newName) =>{\n    const editTaskList = tasks.map(task=>{\n      if(id=== task.id){\n        return {...task,name:newName}\n      }\n      return task\n    })\n    setTasks(editTaskList)\n  }\n\n  const deleteTask = (id) =>{\n    const remainingTask = tasks.filter(task=> id !== task.id);\n    setTasks(remainingTask)\n  }\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task=> (\n    <Todo \n      name={task.name} \n      complete={task.complete} \n      id={task.id} \n      key={task.id} \n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ))\n\n  const addTask = (name) =>{\n    if(name !== ''){\n      const newTask = {id:\"todo-\"+nanoid(),name:name,complete:false};\n      setTasks([...tasks,newTask])\n    }\n    \n  }\n  \n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  useEffect( () =>{\n    if(tasks.length - prevTaskLength === -1){\n      listHeadingRef.current.focus()\n    }\n  },[tasks.length,prevTaskLength])\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText} \n      </h2>\n      <ul className=\"todo-list stack-large stack-exception\" aria-labelledby=\"list-heading\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", complete: false },\n  { id: \"todo-1\", name: \"Sleep\", complete: false },\n  { id: \"todo-2\", name: \"Repeat\", complete: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}